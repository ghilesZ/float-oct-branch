/*
  An abstract fixpoint solver based on Constraint Programming

  Example file: 
     Practical policy iterations
     Roux and Garoche
     Form Methods Syst Des 2015
     DOI 10.1007/s10703-015-0230-7
     Also known as Ex.7 (Dampened oscillator)

     ultimately from LMCS '12: ACCURATE NUMERICAL INVARIANTS 
     by Adje, Gaubert, and Goubault
     Figure 8: The program Oscillator
     (Euler method)
  
  NameInPaper: Dampened oscillator
  Author: Jason Breck
  Copyright 2015
*/

/*
 // Code from benchmarks tarball
 node top(ix0, ix1 : real) returns (x0, x1 : real);
 let
   assert(ix0 > 0. and ix0 < 1.);
   assert(ix1 > 0. and ix1 < 1.);
   x0 = ix0 -> pre x0 + 0.01 * pre x1;
   x1 = ix1 -> -0.1 * pre x0 + 0.99 * pre x1;
 tel
*/

/*
  // Original code from the Goubault paper:
  // (Think v = x1, x = x0)
  x = [0,1];
  v = [0,1];
  h = 0.01;
  while ( true ) {
    u = v; 
    v = v * (1 - h) - h * x;
    x = x + h * u;
  }
*/

init {
  x0=[0,1];
  x1=[0,1];
}

body {
  x0p = x0; x1p = x1;

  x0 =      x0p + 0.01*x1p;
  x1 = -0.1*x0p + 0.99*x1p;
}

goal {
  // Bounds given in the Roux paper (Table 3)
  //x0=[-1.74,1.74];
  //x1=[-1.74,1.74];
  // Bounds given in benchmarks PDF:
  x0=[-1.1,1.1];
  x1=[-3.51,3.51];
  // Goal from ESOP'10 paper: (Policy iteration)
  //x=[-1.88,1.88];
  //v=[-1.53,1.53];
  // Goal from ESOP'10 paper: (Kleene iteration)
  //x=[-2.45,2.45];
  //v=[-2,2];
}
